[ { "title": "Introduction to Derivatives", "url": "/website/posts/Introduction-to-Derivatives-Syllabus/", "categories": "Teaching", "tags": "derivatives", "date": "2021-01-15 00:00:00 -0500", "snippet": "FIN2325–001Prerequisites: FIN 2227 + FIN 2323 + FIN 2114Class: MW 3–4:15pm, Bartley 2045Office Hours: Wednesday 1:30-2:30pm, and by appointmentDr. Raisa Velthuisraisa.velthuis@villanova.eduOffice: Bartley 2085, (610) 519–4319Message me on Microsoft Teams or Google ChatFutures and options contracts are among the most actively traded financial instruments.They are an important segment of contemporary financial markets. This course examinesexchange-traded and over-the-counter derivative contracts such as futures, forwards,options, and swaps. The goal is to develop a core set of principles that will help us understandthe diverse ways that derivatives are used in practice. These principles are developed througha series of real-world examples with an emphasis on simultaneously developing intuition andfamiliarity with a broad spectrum of markets, as well as valuation, and risk-managementapplications. The course is quantitative, and we will work with various equations. However,a large emphasis is placed on understanding the economic concepts behind the equations.The material in this course should be useful to anyone who is planning a career in trading,corporate finance, risk management, management consulting, or any other field involvingfinancial decision making. In my class, you can expect to be challenged, engaged, andsupported as you explore the multifaceted world of financial derivatives!Learning outcomes: What you will knowUpon successful completion of FIN2325, you will be able to: Understand how derivative markets operate Compare and contrast various basic derivative contracts, including forwards, futures, swaps, and options. Implement hedging and trading strategies using derivatives Employ the binomial model, Black-Scholes model, and use simulations to price options Discuss financial news and gain awareness of the risks involved with derivatives.What book and other materials do I need? Textbook: Fundamentals of Futures and Options Markets, 9th Edition, byJohn C. Hull, Pearson, 2017. ISBN 978 - 0134083247. The latest version of thesoftware Derivagem can be downloaded from the author’s website. Access to news sources, e.g., Wall Street Journal, Financial Times.Refer to the Library site for info on how to access your free VSB subscriptions. Office 365: Files will be shared on OneDrive, which you can sync to yourcomputer automatically. For more details, see http://office.villanova.edu Calculator: A financial calculator will be required for this course and shouldbrought to each class for solving problems. I recommend the TexasInstruments BAII Plus (which I will be using) or the Hewlett PackardHP 10bII+. Calculators with storage capability will not be allowed for exams. Q&amp;amp;A: Please use the Q&amp;amp;A discussion forum on Blackboard to ask any questions you mayhave that relate to the course. This tool may help you get help fast and efficiently fromclassmates and myself. I encourage you to post all your questions here, instead of relying onemail. It can be especially helpful to learn what made a concept “click” from a classmate thatjust mastered it. Your contributions also count towards your class participation grade.PDF Syllabus to be added." }, { "title": "Equity Markets and Valuation", "url": "/website/posts/Equity-Markets-and-Valuation-Syllabus/", "categories": "Teaching", "tags": "equity markets", "date": "2020-08-23 01:00:00 -0400", "snippet": "A syllabus will be added at a future date." }, { "title": "2SLS with double clustered standard errors", "url": "/website/posts/2SLS-with-double-clustered-standard-errors/", "categories": "Code, SAS", "tags": "sas, clustered s.e.", "date": "2016-01-16 00:00:00 -0500", "snippet": "This program was written for my research on hedge fund capacity constraints, where we use recursive demeaning to estimate the returns to scale effect, following Pastor, Stambaugh, and Taylor (2015).********** SAS code for 2SLS with double-clustered standard errors **********;/* Author: Raisa Velthuis *//* Created: January 22, 2016 */*** Make adjustments below as needed. For example, in my base case scenario, the model has one regressor and one instrument, and does not include intercepts ***; %let data=sample; *name of dataset;* get White cov matrix;proc model data=&amp;amp;data noprint; where Z ne .; parms b_1st b_2nd; Y = b_2nd*X; X = b_1st*Z; fit Y X / 2sls outest=V2W covout hccme=0; instruments Z / noint;run; quit;data v2w; set v2w; where _name_ = &quot;b_2nd&quot;; run;* add ID for double-clustered observations;proc sort data=&amp;amp;data; by fund time; run;proc sort data=&amp;amp;data out=cluster2 nodupkey; by fund time; run;data cluster2;set cluster2;if _n_=1 then cluster2 = 0;cluster2 +1; keep fund time cluster2;run;data &amp;amp;data; merge &amp;amp;data cluster2; by fund time; run;* plain first stage regression w White s.e.;proc reg data=&amp;amp;data plots=none; model X = Z /hcc HCCMETHOD=0 acov noint;ods output acovest=both ;run;quit;data both; set both; drop Variable Dependent Model; run;* estimate RD w double-clustered s.e.;proc iml;* import data;use &amp;amp;data;read all var {Y} into y where (Z ^= .); read all var {Z} into Z where (Z ^= .); read all var {X} into X where (Z ^= .); read all var {time} into time where (Z ^= .); read all var {fund} into time where (Z ^= .); read all var {cluster2} into cluster2 where (Z ^= .);close &amp;amp;data; use both; read all var {Z} into V1W;close both; use V2W;read all var {b_2nd} into V2W; close V2W;* counters and degrees of freedom adjustements;N=nrow(y); f=unique(time); t=unique(time); d=unique(cluster2); M1=ncol(unique(time));M2=ncol(unique(time));M3=ncol(unique(cluster2));M=min(M1,M2);K=ncol(X); qc1 = (N-1)/(N-K)*M1/(M1-1); qc2 = (N-1)/(N-K)*M2/(M2-1); qc3 = (N-1)/(N-K)*M3/(M3-1); qc = (N-1)/(N-K)*M/(M-1);*** first stage estimation ***; b1 = inv(Z`*Z)*Z`*X; e = X - Z*b1;* cluster 1 (time);SUM=0; do g = f[&amp;gt;&amp;lt;] to f[&amp;lt;&amp;gt;]; h = loc(f=g); if nrow(h)&amp;gt;0 then do; h = loc(time=f[h]); eg = e[h]; zg = Z[h,:];SUM=SUM+zg`*eg*eg`*zg;end; end;V11 = inv(Z`*Z)*SUM*inv(Z`*Z)*qc1;* cluster 2 (time);SUM=0; do g = t[&amp;gt;&amp;lt;] to t[&amp;lt;&amp;gt;]; h = loc(t=g); if nrow(h)&amp;gt;0 then do; h = loc(time=t[h]); eg = e[h]; zg = Z[h,:];SUM=SUM+zg`*eg*eg`*zg;end; end;V12 = inv(Z`*Z)*SUM*inv(Z`*Z)*qc2;* double clustered V;V1 = (V11+V12-V1W);**qc; se1 = V1##.5;/*print V11;print V12;print V1W; print V1; print se1; */ *** second stage estimation ***; b_iv = inv(Z`*X)*Z`*y; u = y - X*b_iv;; * cluster 1 (time);SUM=0; do g = f[&amp;gt;&amp;lt;] to f[&amp;lt;&amp;gt;]; h = loc(f=g); if nrow(h)&amp;gt;0 then do; h = loc(time=f[h]); ug = u[h]; zg = Z[h,:];SUM=SUM+zg`*ug*ug`*zg;end; end;V21 = inv(Z`*X)*SUM*inv(X`*Z)*qc1;* cluster 2 (time);SUM=0; do g = t[&amp;gt;&amp;lt;] to t[&amp;lt;&amp;gt;]; h = loc(t=g); if nrow(h)&amp;gt;0 then do; h = loc(time=t[h]); ug = u[h]; zg = Z[h,:];SUM=SUM+zg`*ug*ug`*zg;end; end;V22 = inv(Z`*X)*SUM*inv(X`*Z)*qc2;* double clustered V;Vclu = (V21+V22-V2W);**qc; seclu = Vclu##.5; /*print V21;print V22;print V2W; print Vclu; print seclu; */* store results;create results var {b1 se1 b_iv seclu N M M1 M2 M3 K};append; close results; quit;* output;data results; set results;* second stage t-stat and p-value;tvalue=b_iv/seclu; probt=(1-probt(abs(tvalue),M-1))*2; * first stage t-stat and p-value;tvalue1=b1/se1;probt1=(1-probt(abs(tvalue1),M-1))*2;run;" }, { "title": "Import Excel files", "url": "/website/posts/Import-Excel-files/", "categories": "Code, SAS", "tags": "sas, import, excel", "date": "2013-11-12 00:00:00 -0500", "snippet": "This program is helpful to import a large set of similarly structured Excel files, for example to read a set of files containing Russell Index constituent data./* Program to import set of Excel files obtained from Russell *//* Each Excel file has the same format, but covers different years *//* The file names indicate whether the data concerns the Russell 1000, 2000, or Micro index *//* Variable names (column headers) are repeated throughout the file, and eliminated after importing */* Finally, CRSP permnos are matched to the index constituent data by ticker-date pairs *//* Author: Raisa Velthuis *//* Created: November 22, 2013 */* initialize;%let path = C:\\Users\\Me\\Documents\\Russell Data\\;libname crsp &#39;D:\\WRDS\\2013&#39;; /* location of crsp.msf table */* import files;%macro get_filenames(location);/* From: http://stackoverflow.com/questions/1409543/using-sas-macro-to-pipe-a-list-of-filenames-from-filename _dir_ &quot;%bquote(&amp;amp;location.)&quot;;data filenames(keep=memname); handle=dopen( &#39;_dir_&#39; ); if handle &amp;gt; 0 then do; count=dnum(handle); do i=1 to count; memname=dread(handle,i); output filenames;end; end;rc=dclose(handle);run;filename _dir_ clear; %mend;%get_filenames(&amp;amp;path);%macro get_files(out=); /* Adapted from: http://www.nesug.org/Proceedings/nesug11/cc/cc17.pdf */ /* Select index */ data files; set filenames; where find(memname,&quot;&amp;amp;out.&quot;)&amp;gt;0; i = _n_; run; /* Number of files */ proc sql noprint; select count(memname) into :nfiles from files; quit; %put Number of files in directory: &amp;amp;nfiles; /* Import files */ %do i = 1 %to &amp;amp;nfiles; %* Get file name; proc sql noprint; select %trim(%left(memname)) into :file from files where i = &amp;amp;i; quit; %put File: &amp;amp;file; %put File: &quot;&amp;amp;path.%trim(%left(&amp;amp;file.))&quot;; filename fileloc &quot;&amp;amp;path.%trim(%left(&amp;amp;file.))&quot;; LIBNAME XLSLIB &quot;&amp;amp;path.%trim(%left(&amp;amp;file.))&quot;; proc sql noprint; /***Get total Number of Sheets***/ select count(distinct(MEMNAME)) into: tot from sashelp.vtable where LIBNAME =&#39;XLSLIB&#39; AND INDEX(MEMNAME,&#39;General&#39;)=0; /**Get the sheet names in to macro variables***/ select distinct(MEMNAME) into: v1 - :v%trim (%left(&amp;amp;tot)) from sashelp.vtable where LIBNAME =&#39;XLSLIB&#39; AND INDEX (MEMNAME,&#39;General&#39;)=0; %* import data; PROC IMPORT OUT= WORK.Russell_&amp;amp;i DATAFILE= fileloc DBMS=EXCEL REPLACE; RANGE=&quot;&amp;amp;v1.&quot;; GETNAMES=YES; MIXED=NO; SCANTEXT=YES; USEDATE=YES; SCANTIME=YES; RUN; %end; %* combine files; data &amp;amp;out; format date $10. ticker $8. desc $20. iwght best12.; set Russell_:; date2 = input(date,mmddyy10.); format date2 date9.; if not(missing(date2)); drop date; rename date2=date; run; %* clean up; proc datasets nolist; delete files Russell_:; quit; %mend;%get_files(out=R1); /* Read in R1000 data */%get_files(out=R2); /* Read in R2000 data */%get_files(out=RMicro); /* Read in RMicro data */********* Add Permnos to Russell Membership data *********;%macro add_permnos(out=); * add permnos based on ticker at specific date; proc sql; /* create single entry per ticker (sum weights of duplicate tickers) */ create table &amp;amp;out._id as select distinct a.date, a.ticker, a.desc, sum(a.iwght) as iwght from &amp;amp;out. as a where a.ticker is not missing group by a.date, a.ticker order by a.date, a.ticker ; quit; proc sql; create table &amp;amp;out._id as select intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) as date format date9., a.*, b.permno, b.comnam, b.exchcd, b.shrcd, b.shrcls, abs(c.prc)*c.shrout as mcap from &amp;amp;out._id as a left join (select * from crsp.stocknames where ticker is not missing) as b on a.ticker = b.ticker and a.date between b.namedt and b.nameenddt left join crsp.msf as c on b.permno = c.permno and intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) = intnx(&#39;month&#39;,c.date,0,&#39;e&#39;) order by a.date, a.ticker, mcap desc ; quit; data &amp;amp;out._id; * remove duplicate permno matches; set &amp;amp;out._id; where permno is not missing; by date ticker descending mcap; if first.ticker; keep date permno iwght comnam; run; %mend;%add_permnos(out=R1);%add_permnos(out=R2);%add_permnos(out=RMicro);* crsp with russell identifiers;proc sql; create table crsp_w_Russell as select intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) as date format date9., a.permno, case when b.R1000 = 1 then 1 else 0 end as R1000, case when missing(b.iwght) then 0 else b.iwght end as R1wght, case when c.R2000 = 1 then 1 else 0 end as R2000, case when missing(c.iwght) then 0 else c.iwght end as R2wght, case when d.RMicro = 1 then 1 else 0 end as RMicro, case when missing(d.iwght) then 0 else d.iwght end as RMwght from crsp.msf as a left join (select *, 1 as R1000 from R1_id) as b on a.permno=b.permno and intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) = b.date left join (select *, 1 as R2000 from R2_id) as c on a.permno=c.permno and intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) = c.date left join (select *, 1 as RMicro from RMicro_id) as d on a.permno=d.permno and intnx(&#39;month&#39;,a.date,0,&#39;e&#39;) = d.date where a.date &amp;gt;= &#39;01DEC1978&#39;d order by permno, date; quit;**** some checks *****;* summ stats;proc means data=R1_id nway noprint;class date; var iwght;output out=nmembers1 sum=iwght_R1;run;proc means data=R2_id nway noprint;class date; var iwght;output out=nmembers2 sum=iwght_R2;run;proc means data=RMicro_id nway noprint;class date; var iwght;output out=nmembers3 sum=iwght_RM;run; data nmembers;merge nmembers1(drop=_type_ rename=(_freq_=nR1)) nmembers2(drop=_type_ rename=(_freq_=nR2)) nmembers3(drop=_type_ rename=(_freq_=nRM));by date; run;*time series plot - number of funds; ods pdf file=&quot;&amp;amp;path.Russell N iwght.pdf&quot; ; goptions reset=all; options orientation=landscape;legend label=none value=(h=2 &#39;Russell 1000&#39; &#39;Russell 2000&#39; &#39;Russell Micro&#39;) cborder=black;axis1 label=(angle=90 &#39;Sum of index weights&#39;) order= 0 to 1.1 by .1; axis2 label=(angle=90 &#39;Number of stocks&#39;) order= 0 to 2200 by 200; proc gplot data=nmembers; symbol i=j v=none h=1 w=3; format date year4.; title &quot;Total index weight of stocks in Russell index per month&quot;; plot ( iwght_R1 iwght_R2 iwght_RM) * date / overlay legend=legend1 vaxis=axis1 ; run; title &quot;Number of stocks in Russell index per month&quot;; plot ( nR1 nR2 nRM) * date / overlay legend=legend1 vaxis=axis2 ; run; quit; quit;ods pdf close;* clean up; proc datasets nolist;delete filenames Membersmcap Nmembers: R1 R1_id R2 R2_id RMicro RMicro_id;quit;" } ]
